// https://github.com/magicspon/gatsby-tailwind-hack-example/blob/master/tailwind.config.js

// @import '../global/font-stacks.scss';
@import '../global/variables.scss';
@import '../global/reboot.scss';
@import '../global/mixins';
@import '../global/type';
@import '../global/grid';

a {
	transition: color 100ms ease-in-out;
	text-decoration: none;
}

img {
	height: auto;
}

iframe,
object {
	padding: 0;
	margin: 0;
	border: 0;
}

h1 {
	@include type--h1;
}

h2 {
	@include type--h2;
}

h3 {
	@include type--h3;
}

h4 {
	@include type--h4;
}

h5 {
	@include type--h5;
}

h6 {
	@include type--h6;
}

p {
	@include type--p;
}


.hr {
	background-color: transparent;
	border-top: 2px dashed red; // $black--opaque5;
	margin: ms(5) 0;
}

table {
	// max-width: 500px;
	width: auto !important;
	border: 1px solid $primary;
	font-size: 14px;
	line-height: 1.3em;
	margin-top: 1.5rem;
}

td,
th {
	border-bottom: 1px solid $primary !important;
	padding: ms(-5);
}

p,
ol,
ul {
	max-width: 44em;
}

ol,
ul {
	// margin: ms(0) 0 0 0;
	padding-left: ms(2);
}

li {
	+ li {
		margin-top: 0.5em;
	}

	ol,
	ul {
		margin-top: 0.5em;
	}
}


.hide-text {
	@include hide-text1;
}


// LAYOUT
// .page-article
.page-body {
	padding: ms(7) 0;
}

.page-header {
	border-bottom: 2px dashed $black--opaque8;
	padding-bottom: ms(5);
	// margin-bottom: ms(5);

	h1 {
		margin-bottom: 0;
	}
}


.container-fluid {
	margin-right: auto;
	margin-left: auto;
	// padding-right: $spacing--small;
	// padding-left: $spacing--small;
	padding-right: 5vw;
	padding-left: 5vw;
	max-width: $responsiveMaxWidth;

	@media #{$mqMediumAndUp} {
		// padding-right: $spacing--inbetween;
		// padding-left: $spacing--inbetween;
		padding-right: 4vw;
		padding-left: 4vw;
	}

	@media #{$mqLargeAndUp} {
		// padding-right: $spacing--large;
		// padding-left: $spacing--large;
		// padding-right: 5%;
		// padding-left: 5%;
	}

	@media #{$mqXLargeAndUp} {
		// padding-right: $spacing--xlarge;
		// padding-left: $spacing--xlarge;
		// padding-right: 5%;
		// padding-left: 5%;
	}

	@media #{$mqXXLargeAndUp} {
		padding-right: 10vw; // 10%
		padding-left: 10vw; // 10%
	}
}

.row {
	@include grid-row;
}

@mixin example-viewport ($key) {
	.col-#{$key} {
		$str: '&';

		// no idea why the indenting no longer works for this and why I need & {}
		@include grid-column-span(auto);

		@for $i from 0 through $columns {
			$str: $str + ',' + '&' + '-' + $i + ',' + '&' + '-offset-' + $i;
		}

		@at-root #{$str} {
			@include grid-column;
		}

		@for $i from 0 through $columns {
			&-#{$i} {
				@include grid-column-span($i);
			}

			&-offset-#{$i} {
				@include grid-column-offset($i);
			}
		}
	}

	.start-#{$key} {
		@include grid-row-alignment-horizontal(start);
	}

	.center-#{$key} {
		@include grid-row-alignment-horizontal(center);
	}

	.end-#{$key} {
		@include grid-row-alignment-horizontal(end);
	}

	.top-#{$key} {
		@include grid-row-alignment-vertical(top);
	}

	.middle-#{$key} {
		@include grid-row-alignment-vertical(middle);
	}

	.bottom-#{$key} {
		@include grid-row-alignment-vertical(bottom);
	}

	.around-#{$key} {
		@include grid-row-spacing(space-around);
	}

	.between-#{$key} {
		@include grid-row-spacing(space-between);
	}

	// .evenly-#{$key} {
	// 	@include grid-row-spacing(space-evenly);
	// }

	.first-#{$key} {
		@include grid-column-order(first);
	}

	.last-#{$key} {
		@include grid-column-order(last);
	}
}

@each $key, $value in $viewport-layouts {
	@if ($key == sm) {
		@include example-viewport($key);
	}

	@else {
		$min-width: map-get($value, 'min-width');

		@media screen and (min-width: $min-width) {
			@include example-viewport($key);
		}
	}
}
